import java.io.*;

public class Serialize {

/*Сериализация - это процесс преобразования объекта в последовательность байтов, 
которая может быть сохранена в файле, передана по сети или использована в другом контексте. 
 метод сериализации (serialize) является общим процессом
  преобразования объекта в сериализованную форму, а статический метод записи в байтовый поток (outputST) 
  является конкретной операцией записи сериализованного объекта в байтовый поток.
*/

    /*Метод serialize принимает объект типа Student и поток вывода (OutputStream), и выполняет сериализацию объекта. 
    Сериализованные данные записываются в указанный поток вывода с помощью ObjectOutputStream. */
    public static void serialize(Student s, OutputStream out) throws IOException {
        ObjectOutputStream oos = new ObjectOutputStream(out);
        oos.writeObject(s);
        oos.flush();
    }
//При вызове writeObject для объекта типа Student, объект будет сериализован, то есть его состояние 
//будет преобразовано в байты, которые могут быть сохранены или переданы по сети.

/*Десериализация - это процесс восстановления объекта из его сериализованной формы, то есть из последовательности байтов. 
При сериализации объекта его состояние и структура преобразуются в байты, которые могут
 быть сохранены или переданы, а при десериализации эти байты восстанавливаются в объект. */
/*Метод deserialize принимает поток ввода (InputStream) и выполняет десериализацию. Он восстанавливает объект 
типа Student из сериализованных данных, прочитанных из потока ввода с помощью ObjectInputStream. */
    public static Student deserialize(InputStream in) throws IOException, ClassNotFoundException {
        ObjectInputStream ois = new ObjectInputStream(in);
        return (Student) ois.readObject();
    }
    /*readObject - это метод класса ObjectInputStream, который используется для чтения 
    (десериализации) объекта из потока ввода. 
    Этот метод считывает последовательность байтов из потока и восстанавливает объект из этих байтов. */
}
